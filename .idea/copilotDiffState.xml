<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/wallify/feature/wallify/product/all_product/widgets/center_grip_group.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/wallify/feature/wallify/product/all_product/widgets/center_grip_group.kt" />
              <option name="originalContent" value="import androidx.compose.foundation.background&#10;import androidx.compose.foundation.layout.*&#10;import androidx.compose.foundation.shape.RoundedCornerShape&#10;import androidx.compose.material.icons.Icons&#10;import androidx.compose.material.icons.filled.KeyboardArrowUp&#10;import androidx.compose.material3.Icon&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.draw.shadow&#10;import androidx.compose.ui.graphics.Color&#10;import androidx.compose.ui.text.style.TextAlign&#10;import androidx.compose.ui.unit.dp&#10;&#10;@Composable&#10;fun CenterGripButton(&#10;    modifier: Modifier = Modifier,&#10;    alpha: Float = 1f,&#10;    onClick: () -&gt; Unit = {}&#10;) {&#10;    Box(&#10;        modifier = modifier&#10;            .fillMaxWidth()&#10;            .height(24.dp),&#10;        contentAlignment = Alignment.TopCenter&#10;    ) {&#10;        Box(&#10;            modifier = Modifier&#10;                .offset(y = 14.dp)&#10;                .size(width = 48.dp, height = 18.dp)&#10;                .shadow(elevation = 4.dp, shape = RoundedCornerShape(1.dp))&#10;                .background(Color(0xFF23202E).copy(alpha = alpha), shape = RoundedCornerShape(12.dp)),&#10;            contentAlignment = Alignment.TopCenter&#10;        ) {&#10;            Icon(&#10;                imageVector = Icons.Filled.KeyboardArrowUp,&#10;                contentDescription = &quot;Up&quot;,&#10;                tint = Color.White.copy(alpha = alpha),&#10;                modifier = Modifier&#10;                    .align(Alignment.TopCenter)&#10;            )&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="import androidx.compose.foundation.background&#10;import androidx.compose.foundation.layout.*&#10;import androidx.compose.foundation.shape.RoundedCornerShape&#10;import androidx.compose.material.icons.Icons&#10;import androidx.compose.material.icons.filled.KeyboardArrowUp&#10;import androidx.compose.material3.Icon&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.draw.shadow&#10;import androidx.compose.ui.graphics.Color&#10;import androidx.compose.ui.text.style.TextAlign&#10;import androidx.compose.ui.unit.dp&#10;&#10;@Composable&#10;fun CenterGripButton(&#10;    modifier: Modifier = Modifier,&#10;    alpha: Float = 1f,&#10;    onClick: () -&gt; Unit = {}&#10;) {&#10;    Box(&#10;        modifier = modifier&#10;            .fillMaxWidth()&#10;            .height(24.dp),&#10;        contentAlignment = Alignment.TopCenter&#10;    ) {&#10;        Box(&#10;            modifier = Modifier&#10;                .offset(y = 14.dp)&#10;                .size(width = 48.dp, height = 18.dp)&#10;                .shadow(elevation = 4.dp, shape = RoundedCornerShape(1.dp))&#10;                .background(Color(0xFF23202E).copy(alpha = alpha), shape = RoundedCornerShape(12.dp)),&#10;            contentAlignment = Alignment.TopCenter&#10;        ) {&#10;            Icon(&#10;                imageVector = Icons.Filled.KeyboardArrowUp,&#10;                contentDescription = &quot;Up&quot;,&#10;                tint = Color.White.copy(alpha = alpha),&#10;                modifier = Modifier&#10;                    .align(Alignment.TopCenter)&#10;            )&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>